{"ast":null,"code":"import React,{Component}from\"react\";// import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\nimport API from\"../../utils/API\";import Detail from\"../../components/Detail\";class Adventures extends Component{constructor(...args){super(...args);this.state={events:[],// sets the state for isLoaded to false, when we setState, change to true, check for true or false in render\n// if data is loading display \"..Loading\", if data is loaded display Detail component/data\nisLoaded:false};this.getEvents=query=>{API.events(query).then(res=>{this.setState({events:res.data._embedded.events,isLoaded:true});console.log(this.state.events[0]);}).catch(err=>console.log(err));};}// When this component mounts, return events within 50 mi of this lat/lon\ncomponentDidMount(){this.getEvents(\"44.309662,-73.261215\");}render(){const isLoaded=this.state.isLoaded;if(!isLoaded){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Detail,{event:this.state.events[0]}));}}export default Adventures;","map":{"version":3,"sources":["/Users/debbie/Documents/AdventurousLlama/client/src/pages/adventures/adventures.js"],"names":["React","Component","API","Detail","Adventures","state","events","isLoaded","getEvents","query","then","res","setState","data","_embedded","console","log","catch","err","componentDidMount","render"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA;AACA;AACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,KAAMC,CAAAA,UAAN,QAAyBH,CAAAA,SAAU,0CAC/BI,KAD+B,CACvB,CACRC,MAAM,CAAE,EADA,CAER;AACA;AACAC,QAAQ,CAAE,KAJF,CADuB,MAc/BC,SAd+B,CAcnBC,KAAK,EAAI,CACjBP,GAAG,CAACI,MAAJ,CAAWG,KAAX,EACKC,IADL,CACUC,GAAG,EAAI,CAAC,KAAKC,QAAL,CAAc,CAAEN,MAAM,CAAEK,GAAG,CAACE,IAAJ,CAASC,SAAT,CAAmBR,MAA7B,CAAqCC,QAAQ,CAAE,IAA/C,CAAd,EACdQ,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAZ,EACH,CAHD,EAIKW,KAJL,CAIWC,GAAG,EAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJlB,EAOH,CAtB8B,EAQ/B;AACAC,iBAAiB,EAAG,CAChB,KAAKX,SAAL,CAAe,sBAAf,EAEH,CAcDY,MAAM,EAAG,MACEb,CAAAA,QADF,CACe,KAAKF,KADpB,CACEE,QADF,CAEL,GAAI,CAACA,QAAL,CAAe,CACX,mBAAO,4CAAP,CACH,CAED,mBACI,4CAOK,oBAAC,MAAD,EAAQ,KAAK,CAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAf,EAPL,CADJ,CAWH,CA3C8B,CA+C/B,cAAeF,CAAAA,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\nimport API from \"../../utils/API\";\nimport Detail from \"../../components/Detail\";\n\nclass Adventures extends Component {\n    state = {\n    events: [],\n    // sets the state for isLoaded to false, when we setState, change to true, check for true or false in render\n    // if data is loading display \"..Loading\", if data is loaded display Detail component/data\n    isLoaded: false\n    };\n\n    // When this component mounts, return events within 50 mi of this lat/lon\n    componentDidMount() {\n        this.getEvents(\"44.309662,-73.261215\");\n        \n    }\n\n    getEvents = query => {\n        API.events(query)\n            .then(res => {this.setState({ events: res.data._embedded.events, isLoaded: true });\n            console.log(this.state.events[0]);\n        })\n            .catch(err => console.log(err));\n            \n            \n    };\n\n    \n\n    render() {\n        const {isLoaded } = this.state;\n        if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                {/* <Detail event={this.state.events}\n                    \n                 />\n                 {console.log(this.state.events[0].name)} */}\n                 {/* {console.log(this.state.events[0])} */}\n                 {/* {this.state.events.map(individualEvent => <Detail event={individualEvent} /> )} */}\n                 <Detail event={this.state.events[0]} /> \n            </div>\n        );\n    }\n}\n\n\n    export default Adventures;"]},"metadata":{},"sourceType":"module"}