{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leah\\\\Desktop\\\\AdventurousLlama\\\\client\\\\src\\\\pages\\\\adventures\\\\adventures.js\";\nimport React, { Component } from \"react\"; // import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\n\nimport API from \"../../utils/API\";\nimport Detail from \"../../components/Detail\";\n\nclass Adventures extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      isLoaded: false,\n      currentEvent: []\n    };\n\n    this.handleBtnClick = event => {\n      // Get the data-value of the clicked button\n      const btnType = event.target.attributes.getNamedItem(\"data-value\").value; // Clone this.state to the newState object\n      // We'll modify this object and use it to set our component's state\n\n      const newState = { ...this.state\n      };\n\n      if (btnType === \"pick\") {\n        // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n        newState.match = 1 === Math.floor(Math.random() * 5) + 1; // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n\n        newState.matchCount = newState.match ? newState.matchCount + 1 : newState.matchCount;\n      } else {\n        // If we thumbs down'ed the dog, we haven't matched with it\n        newState.match = false;\n      } // Replace our component's state with newState, load the next dog image\n\n\n      this.setState(newState); // ????getEvents goes here?\n\n      this.getEvents();\n    };\n\n    this.getEvents = query => {\n      API.events(query).then(res => {\n        this.setState({\n          events: res.data._embedded.events,\n          isLoaded: true\n        });\n        console.log(this.state.events[0]);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  // When this component mounts, return events within 50 mi of this lat/lon\n  componentDidMount() {\n    this.getEvents(\"44.309662,-73.261215\");\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Detail, {\n      event: this.state.events[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default Adventures;","map":{"version":3,"sources":["C:/Users/leah/Desktop/AdventurousLlama/client/src/pages/adventures/adventures.js"],"names":["React","Component","API","Detail","Adventures","state","events","isLoaded","currentEvent","handleBtnClick","event","btnType","target","attributes","getNamedItem","value","newState","match","Math","floor","random","matchCount","setState","getEvents","query","then","res","data","_embedded","console","log","catch","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACRC,MAAAA,MAAM,EAAE,EADA;AAERC,MAAAA,QAAQ,EAAE,KAFF;AAGRC,MAAAA,YAAY,EAAE;AAHN,KADuB;;AAAA,SAa/BC,cAb+B,GAadC,KAAK,IAAI;AACtB;AACA,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,YAAxB,CAAqC,YAArC,EAAmDC,KAAnE,CAFsB,CAGtB;AACA;;AACA,YAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKX;AAAV,OAAjB;;AAEA,UAAIM,OAAO,KAAK,MAAhB,EAAwB;AACtB;AACAK,QAAAA,QAAQ,CAACC,KAAT,GAAiB,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAvD,CAFsB,CAItB;;AACAJ,QAAAA,QAAQ,CAACK,UAAT,GAAsBL,QAAQ,CAACC,KAAT,GAClBD,QAAQ,CAACK,UAAT,GAAsB,CADJ,GAElBL,QAAQ,CAACK,UAFb;AAGD,OARD,MAQO;AACL;AACAL,QAAAA,QAAQ,CAACC,KAAT,GAAiB,KAAjB;AACD,OAlBqB,CAmBtB;;;AACA,WAAKK,QAAL,CAAcN,QAAd,EApBsB,CAqBtB;;AACA,WAAKO,SAAL;AACD,KApC4B;;AAAA,SAsC/BA,SAtC+B,GAsCnBC,KAAK,IAAI;AACjBtB,MAAAA,GAAG,CAACI,MAAJ,CAAWkB,KAAX,EACKC,IADL,CACUC,GAAG,IAAI;AAAC,aAAKJ,QAAL,CAAc;AAAEhB,UAAAA,MAAM,EAAEoB,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBtB,MAA7B;AAAqCC,UAAAA,QAAQ,EAAE;AAA/C,SAAd;AACdsB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAZ;AACH,OAHD,EAIKyB,KAJL,CAIWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJlB;AAOH,KA9C8B;AAAA;;AAO/B;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,SAAL,CAAe,sBAAf;AAEH;;AAuCDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAC3B,MAAAA;AAAD,QAAc,KAAKF,KAAzB;;AACA,QAAI,CAACE,QAAL,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOK,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPL,CADJ;AAWH;;AAnE8B;;AAuE/B,eAAeF,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\nimport API from \"../../utils/API\";\nimport Detail from \"../../components/Detail\";\n\nclass Adventures extends Component {\n    state = {\n    events: [],\n    isLoaded: false,\n    currentEvent: []\n    };\n\n    // When this component mounts, return events within 50 mi of this lat/lon\n    componentDidMount() {\n        this.getEvents(\"44.309662,-73.261215\");\n        \n    }\n\n    handleBtnClick = event => {\n        // Get the data-value of the clicked button\n        const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n        // Clone this.state to the newState object\n        // We'll modify this object and use it to set our component's state\n        const newState = { ...this.state };\n    \n        if (btnType === \"pick\") {\n          // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n          newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n    \n          // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n          newState.matchCount = newState.match\n            ? newState.matchCount + 1\n            : newState.matchCount;\n        } else {\n          // If we thumbs down'ed the dog, we haven't matched with it\n          newState.match = false;\n        }\n        // Replace our component's state with newState, load the next dog image\n        this.setState(newState);\n        // ????getEvents goes here?\n        this.getEvents();\n      };\n\n    getEvents = query => {\n        API.events(query)\n            .then(res => {this.setState({ events: res.data._embedded.events, isLoaded: true });\n            console.log(this.state.events[0]);\n        })\n            .catch(err => console.log(err));\n            \n            \n    };\n\n    \n\n    render() {\n        const {isLoaded } = this.state;\n        if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                {/* <Detail event={this.state.events}\n                    \n                 />\n                 {console.log(this.state.events[0].name)} */}\n                 {/* {console.log(this.state.events[0])} */}\n                 {/* {this.state.events.map(individualEvent => <Detail event={individualEvent} /> )} */}\n                 <Detail event={this.state.events[0]}/> \n            </div>\n        );\n    }\n}\n\n\n    export default Adventures;"]},"metadata":{},"sourceType":"module"}