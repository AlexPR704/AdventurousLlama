{"ast":null,"code":"import _slicedToArray from \"/Users/debbie/Documents/AdventurousLlama/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/debbie/Documents/AdventurousLlama/client/src/pages/login/login.js\";\nimport React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst Login = props => {\n  // Setting the component's initial state\n  //   state = {\n  //     userName: \"\",\n  //     email: \"\",\n  //     password: \"\"\n  //   };\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value; // const name = event.target.name;\n\n    value = value.substring(0, 15);\n    setPassword(value); // Updating the input's state\n  };\n\n  const handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n\n    if (!userName || !email) {\n      alert(\"Fill out your username and email!\");\n    } else if (password.length < 6) {\n      alert(\"Choose a more secure password \".concat(userName));\n    }\n\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  }; // Notice how each input has a `value`, `name`, and `onChange` prop\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Hello \", userName), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: userName,\n    name: \"userName\",\n    onChange: event => setUserName(event.target.value),\n    type: \"text\",\n    placeholder: \"User Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    name: \"email\",\n    onChange: event => setEmail(event.target.value),\n    type: \"text\",\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: password,\n    name: \"password\",\n    onChange: event => handleInputChange(event),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => handleFormSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Submit\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/debbie/Documents/AdventurousLlama/client/src/pages/login/login.js"],"names":["React","useState","Login","props","userName","setUserName","email","setEmail","password","setPassword","handleInputChange","event","value","target","substring","handleFormSubmit","preventDefault","alert","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAD,IAAW;AACtB;AACF;AACA;AACA;AACA;AACA;AANwB,oBAOUF,QAAQ,CAAC,EAAD,CAPlB;AAAA;AAAA,QAOfG,QAPe;AAAA,QAOLC,WAPK;;AAAA,qBAQGJ,QAAQ,CAAC,EAAD,CARX;AAAA;AAAA,QAQfK,KARe;AAAA,QAQRC,QARQ;;AAAA,qBASUN,QAAQ,CAAC,EAAD,CATlB;AAAA;AAAA,QASfO,QATe;AAAA,QASLC,WATK;;AAUtB,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB,CAFiC,CAGjC;;AAGEA,IAAAA,KAAK,GAAGA,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAR;AACEL,IAAAA,WAAW,CAACG,KAAD,CAAX,CAP6B,CAQjC;AAED,GAVD;;AAYA,QAAMG,gBAAgB,GAAGJ,KAAK,IAAI;AAChC;AACAA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAI,CAACZ,QAAD,IAAa,CAACE,KAAlB,EAAyB;AACvBW,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,KAFD,MAEO,IAAIT,QAAQ,CAACU,MAAT,GAAkB,CAAtB,EAAyB;AAC9BD,MAAAA,KAAK,yCAC8Bb,QAD9B,EAAL;AAGD;;AACDC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAbD,CAtBsB,CAsCpB;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSL,QADT,CADF,eAIE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEA,QADT;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEO,KAAK,IAAEN,WAAW,CAACM,KAAK,CAACE,MAAN,CAAaD,KAAd,CAH9B;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEK,KAAK,IAAEJ,QAAQ,CAACI,KAAK,CAACE,MAAN,CAAaD,KAAd,CAH3B;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE;AACE,IAAA,KAAK,EAAEJ,QADT;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEG,KAAK,IAAED,iBAAiB,CAACC,KAAD,CAHpC;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAsBE;AAAQ,IAAA,OAAO,EAAEA,KAAK,IAAEI,gBAAgB,CAACJ,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,CAJF,CADF;AA+BD,CAtEH;;AAyEA,eAAeT,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./style.css\";\n\nconst Login =(props)=>  {\n  // Setting the component's initial state\n//   state = {\n//     userName: \"\",\n//     email: \"\",\n//     password: \"\"\n//   };\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] =useState('');\n  const [password, setPassword] = useState('');\n  const handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value;\n    // const name = event.target.name;\n\n    \n      value = value.substring(0, 15);\n        setPassword(value)\n    // Updating the input's state\n  \n  };\n\n  const handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n    if (!userName || !email) {\n      alert(\"Fill out your username and email!\");\n    } else if (password.length < 6) {\n      alert(\n        `Choose a more secure password ${userName}`\n      );\n    }\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  };\n\n \n    // Notice how each input has a `value`, `name`, and `onChange` prop\n    return (\n      <div>\n        <p>\n          Hello {userName}\n        </p>\n        <form className=\"form\">\n          <input\n            value={userName}\n            name=\"userName\"\n            onChange={event=>setUserName(event.target.value)}\n            type=\"text\"\n            placeholder=\"User Name\"\n          />\n          <input\n            value={email}\n            name=\"email\"\n            onChange={event=>setEmail(event.target.value)}\n            type=\"text\"\n            placeholder=\"email\"\n          />\n          <input\n            value={password}\n            name=\"password\"\n            onChange={event=>handleInputChange(event)}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <button onClick={event=>handleFormSubmit(event)}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}