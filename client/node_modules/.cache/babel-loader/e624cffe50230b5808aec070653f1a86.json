{"ast":null,"code":"import React,{Component}from\"react\";import{Link,withRouter}from\"react-router-dom\";import{connect}from\"react-redux\";import{registerUser}from\"../../actions/authActions\";import classnames from\"classnames\";// import { Form, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\nclass Register extends Component{constructor(){super();this.onChange=e=>{this.setState({[e.target.id]:e.target.value});};this.onSubmit=e=>{e.preventDefault();const newUser={name:this.state.name,email:this.state.email,password:this.state.password,password2:this.state.password2};this.props.registerUser(newUser,this.props.history);};this.state={name:\"\",email:\"\",password:\"\",password2:\"\",errors:{}};}componentDidMount(){// If logged in and user navigates to Register page, should redirect them to dashboard\nif(this.props.auth.isAuthenticated){this.props.history.push(\"/dashboard\");}}componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}}render(){const errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col s8 offset-s2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col s12\",style:{paddingLeft:\"11.250px\"}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Register\"),\" below\"),/*#__PURE__*/React.createElement(\"p\",{className:\"grey-text text-darken-1\"},\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Log in\"))),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.name,error:errors.name,id:\"name\",type:\"text\",className:classnames(\"\",{invalid:errors.name})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},errors.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.email,error:errors.email,id:\"email\",type:\"email\",className:classnames(\"\",{invalid:errors.email})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},errors.email)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.password,error:errors.password,id:\"password\",type:\"password\",className:classnames(\"\",{invalid:errors.password})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},errors.password)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.password2,error:errors.password2,id:\"password2\",type:\"password\",className:classnames(\"\",{invalid:errors.password2})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password2\"},\"Confirm Password\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},errors.password2)),/*#__PURE__*/React.createElement(\"div\",{className:\"col s12\",style:{paddingLeft:\"11.250px\"}},/*#__PURE__*/React.createElement(\"button\",{style:{width:\"150px\",borderRadius:\"3px\",letterSpacing:\"1.5px\",marginTop:\"1rem\"},type:\"submit\",className:\"btn btn-large waves-effect waves-light hoverable blue accent-3\"},\"Sign up\"))))));}}const mapStateToProps=state=>({auth:state.auth,errors:state.errors});export default connect(mapStateToProps,{registerUser})(withRouter(Register));","map":{"version":3,"sources":["/Users/debbie/Documents/AdventurousLlama/client/src/pages/auth/Register.js"],"names":["React","Component","Link","withRouter","connect","registerUser","classnames","Register","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","props","history","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","paddingLeft","invalid","width","borderRadius","letterSpacing","marginTop","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n// import { Form, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <br />\n                <span className=\"text-danger\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <br />\n                <span className=\"text-danger\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <br />\n                <span className=\"text-danger\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <br />\n                <span className=\"text-danger\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}