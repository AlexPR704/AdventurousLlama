{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leah\\\\Desktop\\\\AdventurousLlama\\\\client\\\\src\\\\pages\\\\adventures\\\\adventures.js\";\nimport React, { Component } from \"react\";\nimport Detail from \"../../components/Detail/Detail\";\nimport \"./style.css\";\nimport API from '../../utils/API';\n\nclass Adventures extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEvents = async query => {\n      // $.ajax({\n      //     type: \"GET\",\n      //     url: \"https://app.ticketmaster.com/discovery/v2/events.json?apikey=tWrBBZF24wNK5nm8P7SdsXOxHxs5yXvI&city=\" + query + \"&radius=50&unit=miles\",\n      //     async: true,\n      //     dataType: \"json\"\n      //})\n      const results = await API.events(query);\n      this.setState({\n        events: results.data._embedded.events,\n        isLoaded: true,\n        currentEvent: 0\n      });\n    };\n\n    this.state = {\n      events: [],\n      currentEvent: 0,\n      isLoaded: false\n    }; // this._TogglePrev = this._TogglePrev.bind(this);\n\n    this._ToggleNext = this._ToggleNext.bind(this);\n  } // When this component mounts, return events within 50 mi of this lat/lon\n\n\n  componentDidMount() {\n    this.getEvents(\"charlotte\");\n  }\n\n  _ToggleNext() {\n    if (this.state.currentEvent === this.state.events.length - 1) return;\n    this.setState(prevState => ({\n      currentEvent: prevState.currentEvent + 1\n    }));\n    console.log(this.state.currentEvent);\n  }\n\n  _TogglePass() {\n    if (this.state.currentEvent === this.state.events.length - 1) return;\n    this.setState(prevState => ({\n      currentEvent: prevState.currentEvent + 1\n    }));\n    console.log(this.state.currentEvent);\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    let {\n      currentEvent,\n      events\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success position\",\n      onClick: this._ToggleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Let's Go!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        position: \"absolute\",\n        bottom: \"50%\",\n        right: \"70%\",\n        zIndex: \"2\"\n      },\n      className: \"btn btn-outline-danger pass\",\n      onClick: this._TogglePass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Hard Pass.\"), /*#__PURE__*/React.createElement(Detail, {\n      event: events[currentEvent],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Adventures;","map":{"version":3,"sources":["C:/Users/leah/Desktop/AdventurousLlama/client/src/pages/adventures/adventures.js"],"names":["React","Component","Detail","API","Adventures","constructor","props","getEvents","query","results","events","setState","data","_embedded","isLoaded","currentEvent","state","_ToggleNext","bind","componentDidMount","length","prevState","console","log","_TogglePass","render","position","bottom","right","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Detail from \"../../components/Detail/Detail\";\nimport \"./style.css\";\nimport API from '../../utils/API'\nclass Adventures extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            currentEvent: 0,\n            isLoaded: false,\n            \n        }\n        // this._TogglePrev = this._TogglePrev.bind(this);\n        this._ToggleNext = this._ToggleNext.bind(this);\n    }\n\n\n    // When this component mounts, return events within 50 mi of this lat/lon\n    componentDidMount() {\n        this.getEvents(\"charlotte\");\n\n    }\n\n    getEvents = async query => {\n        // $.ajax({\n        //     type: \"GET\",\n        //     url: \"https://app.ticketmaster.com/discovery/v2/events.json?apikey=tWrBBZF24wNK5nm8P7SdsXOxHxs5yXvI&city=\" + query + \"&radius=50&unit=miles\",\n        //     async: true,\n        //     dataType: \"json\"\n        //})\n        const results = await API.events(query)\n           \n            this.setState({\n                events: results.data._embedded.events,\n                isLoaded: true,\n                currentEvent: 0\n            });\n        \n\n    };\n\n    _ToggleNext() {\n        if (this.state.currentEvent === this.state.events.length - 1)\n            return;\n\n        this.setState(prevState => ({\n            currentEvent: prevState.currentEvent + 1\n        }));\n        console.log(this.state.currentEvent);\n    }\n\n    _TogglePass() {\n        if (this.state.currentEvent === this.state.events.length - 1)\n            return;\n\n        this.setState(prevState => ({\n            currentEvent: prevState.currentEvent + 1\n        }))\n        console.log(this.state.currentEvent)\n    }\n\n\n\n    render() {\n        const { isLoaded } = this.state;\n        if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n        let { currentEvent, events } = this.state;\n\n        return (\n            <div className=\"Background\">\n                <button className=\"btn btn-outline-success position\" onClick={this._ToggleNext}>Let's Go!</button>\n                <br></br>\n                <br></br>\n                <button style={{ position: \"absolute\", bottom: \"50%\", right: \"70%\", zIndex: \"2\" }} className=\"btn btn-outline-danger pass\" onClick={this._TogglePass}>Hard Pass.</button>\n\n                <Detail event={events[currentEvent]} />\n                \n\n            </div>\n        );\n    }\n}\n\n\nexport default Adventures;"]},"metadata":{},"sourceType":"module"}