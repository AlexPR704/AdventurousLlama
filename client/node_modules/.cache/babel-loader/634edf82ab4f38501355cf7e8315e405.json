{"ast":null,"code":"var _jsxFileName = \"/Users/debbie/Documents/AdventurousLlama/client/src/pages/adventures/adventures.js\";\nimport React, { Component } from \"react\"; // import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\n\nimport API from \"../../utils/API\";\nimport Detail from \"../../components/Detail\";\n\nclass Adventures extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      // sets the state for isLoaded to false, when we setState, change to true, check for true or false in render\n      // if data is loading display \"..Loading\", if data is loaded display Detail component/data\n      isLoaded: false\n    };\n\n    this.getEvents = query => {\n      API.events(query).then(res => {\n        this.setState({\n          events: res.data._embedded.events,\n          isLoaded: true\n        });\n        console.log(this.state.events[0]);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  // When this component mounts, return events within 50 mi of this lat/lon\n  componentDidMount() {\n    this.getEvents(\"44.309662,-73.261215\");\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Detail, {\n      event: this.state.events[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default Adventures;","map":{"version":3,"sources":["/Users/debbie/Documents/AdventurousLlama/client/src/pages/adventures/adventures.js"],"names":["React","Component","API","Detail","Adventures","state","events","isLoaded","getEvents","query","then","res","setState","data","_embedded","console","log","catch","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACRC,MAAAA,MAAM,EAAE,EADA;AAER;AACA;AACAC,MAAAA,QAAQ,EAAE;AAJF,KADuB;;AAAA,SAc/BC,SAd+B,GAcnBC,KAAK,IAAI;AACjBP,MAAAA,GAAG,CAACI,MAAJ,CAAWG,KAAX,EACKC,IADL,CACUC,GAAG,IAAI;AAAC,aAAKC,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAEK,GAAG,CAACE,IAAJ,CAASC,SAAT,CAAmBR,MAA7B;AAAqCC,UAAAA,QAAQ,EAAE;AAA/C,SAAd;AACdQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAZ;AACH,OAHD,EAIKW,KAJL,CAIWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJlB;AAOH,KAtB8B;AAAA;;AAQ/B;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,SAAL,CAAe,sBAAf;AAEH;;AAcDY,EAAAA,MAAM,GAAG;AAAA,UACEb,QADF,GACe,KAAKF,KADpB,CACEE,QADF;;AAEL,QAAI,CAACA,QAAL,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOK,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPL,CADJ;AAWH;;AA3C8B;;AA+C/B,eAAeF,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\nimport API from \"../../utils/API\";\nimport Detail from \"../../components/Detail\";\n\nclass Adventures extends Component {\n    state = {\n    events: [],\n    // sets the state for isLoaded to false, when we setState, change to true, check for true or false in render\n    // if data is loading display \"..Loading\", if data is loaded display Detail component/data\n    isLoaded: false\n    };\n\n    // When this component mounts, return events within 50 mi of this lat/lon\n    componentDidMount() {\n        this.getEvents(\"44.309662,-73.261215\");\n        \n    }\n\n    getEvents = query => {\n        API.events(query)\n            .then(res => {this.setState({ events: res.data._embedded.events, isLoaded: true });\n            console.log(this.state.events[0]);\n        })\n            .catch(err => console.log(err));\n            \n            \n    };\n\n    \n\n    render() {\n        const {isLoaded } = this.state;\n        if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                {/* <Detail event={this.state.events}\n                    \n                 />\n                 {console.log(this.state.events[0].name)} */}\n                 {/* {console.log(this.state.events[0])} */}\n                 {/* {this.state.events.map(individualEvent => <Detail event={individualEvent} /> )} */}\n                 <Detail event={this.state.events[0]} /> \n            </div>\n        );\n    }\n}\n\n\n    export default Adventures;"]},"metadata":{},"sourceType":"module"}